{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Document Management System",
    "contact" : {
      "name" : "tepeszCodes",
      "url" : "https://github.com/tepeszCodes"
    },
    "license" : {
      "name" : "MIT",
      "url" : "https://opensource.org/licenses/MIT"
    },
    "version" : "1.0.0"
  },
  "servers" : [ {
    "url" : "https://dms-express.herokuapp.com/",
    "description" : "Production server"
  } ],
  "tags" : [ {
    "name" : "/users",
    "description" : "Operations about user"
  } ],
  "paths" : {
    "/users" : {
      "get" : {
        "tags" : [ "/users" ],
        "summary" : "Get all users",
        "description" : "Pass optional query parameters to limit or offset number of results",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of records to fetch",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Number of records to offset",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UsersList"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "/users" ],
        "summary" : "Create a new user",
        "requestBody" : {
          "description" : "New user data",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "email username password" ],
                "properties" : {
                  "email" : {
                    "type" : "string"
                  },
                  "fullname" : {
                    "type" : "string"
                  },
                  "username" : {
                    "type" : "string"
                  },
                  "password" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "User created successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserData"
                }
              }
            }
          },
          "400" : {
            "description" : "Either invalid request body (missing required properties) or user with supplied email or username already exists",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}" : {
      "get" : {
        "tags" : [ "/users" ],
        "summary" : "Get user by ID",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the user",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "User was found in the database",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserData"
                }
              }
            }
          },
          "404" : {
            "description" : "User was not found",
            "content" : {
              "text" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "/users" ],
        "summary" : "Update user data",
        "description" : "Supply at least one valid property in the request body, or it will be invalid",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the user",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "description" : "User's data to update",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "email" : {
                    "type" : "string"
                  },
                  "fullname" : {
                    "type" : "string"
                  },
                  "username" : {
                    "type" : "string"
                  },
                  "password" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "User's data was successfuly updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserData"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid request body (at least one valid property is required in request body).",
            "content" : {
              "text" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "/users" ],
        "summary" : "Delete user with given ID",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the user",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "User was successfuly deleted",
            "content" : {
              "text" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "User was not found",
            "content" : {
              "text" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/{id}" : {
      "get" : {
        "tags" : [ "user" ],
        "summary" : "Get a user by id",
        "operationId" : "getUserById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of a user",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "404" : {
            "description" : "User not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "user" ],
        "summary" : "Update a user",
        "operationId" : "updateUser",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id of a user to update",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "description" : "Updated user object",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid payload supplied",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "404" : {
            "description" : "User not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "user" ],
        "summary" : "Delete a user",
        "operationId" : "deleteUserById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of user to be deleted",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "User deleted successfully"
          },
          "400" : {
            "description" : "Invalid id supplied",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "UserData" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "email" : {
            "type" : "string"
          },
          "fullname" : {
            "type" : "string"
          },
          "username" : {
            "type" : "string"
          }
        }
      },
      "UsersList" : {
        "type" : "array",
        "items" : {
          "type" : "object"
        }
      },
      "UserDto" : {
        "type" : "object",
        "properties" : {
          "firstName" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "age" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "User" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "firstName" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "age" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "Error" : {
        "type" : "string"
      },
      "ApiResponse" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "integer",
            "format" : "int32"
          },
          "type" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          }
        }
      },
      "users_body" : {
        "required" : [ "username password email" ],
        "type" : "object",
        "properties" : {
          "username" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "fullname" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          }
        }
      }
    }
  }
}